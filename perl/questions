
1-	Create Hello World program
2-	Print the perl script arguments
3-	Write a program that computes the circumference of a circle with a radius of 12.5. 
4-	Modify the program from the previous exercise to prompt for and accept a radius from the person running the program.
5-	Write a program that prompts for and reads two numbers, and prints out the result of the two numbers multiplied together.
6-	Write a program that reads a string and a number, and prints the string the number of times indicated by the number on separate lines.
7-	Write a program that reads a list of strings on separate lines and prints out the list in reverse order. 
8-	Write a program that reads a number and then a list of strings (all on separate lines), and then prints one of the lines from the list as selected by the number.
9-	Write a program that reads a list of strings and then selects and prints a random string from the list.
10- Write a program that asks for the temperature outside, and prints "too hot" if the temperature is above 35, and "too cold" otherwise.
11- Modify the program from the previous exercise so that it prints "too hot" if the temperature is above 35, "too cold" if the temperature is below 28, and "just right!" if it is between 28 and 35.
 12- Write a program that reads a list of numbers (on separate lines) until the number 999 is read, and then prints the total of all the numbers added together. (Be sure not to add in the 999!) For example, if you enter 1, 2, 3, and 999, the program should reply with the answer of 6 (1+2+3).
13- Write a program that reads in a list of strings on separate lines and then prints out the list    of strings in reverse order - without using reverse on the list.
14- Write a program that prints a table of numbers and their squares from zero to 32. Try to come up with a way where you don't need to have all the numbers from 0 to 32 in a list, and then try one where you do. (For nice looking output, printf "%5g %8g\n", $a, $b prints $a as a five-column number and $b as an eight-column number.)
15- Write a program that reads in a string, and then prints that string and its mapped value according to the mapping presented in the following table:
Input Output
red apple
green leaves
blue ocean

16- Write a program that reads a series of words with one word per line until end-of-file, then prints a summary of how many times each word was seen. (For extra challenge, sort the words in ascending ASCII order in the output.)

17- Write a program “myls” to list the content of a current directory
   
18- Write a program to check users login and passwords. 
   
19- Write a program to print the date 
	Example Tues Apr 19 14:40:00 2011
